<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:task="http://www.springframework.org/schema/task"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/test" />
        <property name="username" value="root" />
        <property name="password" value="chen900827" />
        <property name="defaultAutoCommit" value="true" />
        <property name="poolPreparedStatements" value="true" />
        <!-- 数据库连接池保持的最小连接数 -->
        <property name="minIdle" value="5" />
        <!-- 数据库连接池保持的最大连接数 -->
        <property name="maxIdle" value="30" />
        <!--  当数据库连接因为某种原因断掉之后，再重新从连接池中拿另外一个连接时实际上这个连接可能  已经无效，所以为了确保所拿到的连接全都有效需要在获取连接，返回连接以及连接空闲时进行  有效性验证 下面3个设置为ture时进行验证，默认为false
         -->
        <!-- 取得连接时是否进行有效性验证 -->
        <property name="testOnBorrow" value="true" />
        <!-- 返回连接时是否进行有效性验证 -->
        <property name="testOnReturn" value="true" />
        <!-- 连接空闲时是否进行有效性验证 -->
        <property name="testWhileIdle" value="true" />
    </bean>

    <bean id="namingStrategy" class="acme.me.orm.helper.HibernateStrategy" />

<!-- 基于注解的session工厂 -->
<!--     <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"> -->
<!--         <property name="dataSource" ref="dataSource" /> -->
<!--         <property name="namingStrategy" ref="namingStrategy" /> -->
<!--         <property name="packagesToScnativean" value="test.package" /> -->
<!--     </bean> -->

	<bean id="hiberSessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
        <property name="namingStrategy" ref="namingStrategy" />
		<property name="hibernateProperties">
			<props>
				<!-- <prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop> -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.autoReconnect">true</prop>
			</props>
		</property>
		<property name="packagesToScan"><!-- name配置为annotatedPackages不行 -->
			<list>
				<value>acme.me.orm.*</value>
			</list>
		</property>
	</bean>

<!--     <bean id="hiberSessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"> -->
<!--         <property name="dataSource" ref="dataSource" /> -->
<!--         注意：我用的是Annotation的方式配置的Hibernate，这里的property的name是annotatedClasses -->
<!--         <property name="namingStrategy" ref="namingStrategy" /> -->
<!--         <property name="hibernateProperties"> -->
<!--             <props> -->
<!--                 设置Hibernate方言 -->
<!--                 <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop> -->
<!--                 是否打印sql -->
<!--                 <prop key="hibernate.show_sql">true</prop> -->
<!--                 格式化sql -->
<!--                 <prop key="hibernate.format_sql">true</prop> -->
<!--                 是否自动更新表 -->
<!--                 <prop key="hibernate.hbm2ddl.auto">update</prop> -->
<!--                 <prop key="hibernate.current_session_context_class">thread</prop> -->
<!--                 最大抓取深度，如果为0，则关闭默认的外连接抓取。建议值为0-3 -->
<!--                 <prop key="hibernate.max_fetch_depth">1</prop> -->
<!--                 用于生成有助于调试的注释信息，默认为关闭 -->
<!--                 <prop key="hibernate.use_sql_comments">true</prop> -->
<!--             </props> -->
<!--         </property> -->
<!--         <property name="mappingResources"> -->
<!--             <list> -->
<!--                 <value>acme/me/orm/mapper/hiber-Account.xml</value> -->
<!--             </list> -->
<!--         </property> -->
<!--     </bean> -->

    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
        <property name="sessionFactory" ref="hiberSessionFactory" />
    </bean>

    <!--transactionManager -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="hiberSessionFactory" />
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis-conf.xml" />
        <property name="mapperLocations" value="classpath:acme/me/orm/**/sql*.xml" />
        <property name="plugins">
            <bean class="acme.me.orm.pager.MybatisPageInterceptor" />
        </property>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="acme.me.orm.mapper" />
    </bean>

    <bean id="dataSourceImp" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.sap.db.jdbc.Driver" />
        <property name="url" value="jdbc:sap://192.168.1.99:30015/MEDICAL?reconnect=true" />
        <property name="username" value="MEDICAL" />
        <property name="password" value="Tianfud6402" />
        <property name="defaultAutoCommit" value="false" />
        <property name="poolPreparedStatements" value="true" />
    </bean>

    <bean id="sqlFile" class="java.io.File">
        <constructor-arg>
            <value>./target/classes/will.sql</value>
        </constructor-arg>
    </bean>

    <context:annotation-config />

    <bean id="factoryPostProcessor" class="acme.me.spring.MyBeanFactoryPostProcessor"></bean>

    <bean id="postProcessor" class="acme.me.spring.MyBeanPostProcessor"></bean>

    <bean id="bean2" class="acme.me.spring.Bean"></bean>

    <bean id="bean1" class="acme.me.spring.Bean" init-method="init" />

    <bean id="sleepHelper" class="acme.me.spring.SleepHelper">
    </bean>

    <bean id="human" class="acme.me.spring.Human">
    </bean>

    <bean id="sleepPointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut">
        <property name="pattern" value=".*sleep" />
    </bean>

    <bean id="sleepHelperAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
        <property name="advice" ref="sleepHelper" />
        <property name="pointcut" ref="sleepPointcut" />
    </bean>

    <bean id="humanProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="human" />
        <property name="interceptorNames" value="sleepHelperAdvisor" />
        <property name="proxyInterfaces" value="acme.me.spring.Sleepable" />
    </bean>
</beans>